{"info": {"version": "0.0.1", "description": "Swagger spec for documenting the users service", "title": "Users Service"}, "paths": {"/auth/logout": {"get": {"security": [{"bearerAuth": []}], "responses": {"200": {"description": "Successfully logged out"}}, "summary": "Logs a user out"}}, "/auth/register": {"post": {"requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/user-full"}}}, "required": true, "description": "User to add"}, "responses": {"201": {"description": "Successfully registered"}, "400": {"description": "Invalid payload or user already exists"}}, "summary": "Creates a new user"}}, "/users/ping": {"get": {"responses": {"200": {"description": "Will return 'pong!'"}}, "summary": "Just a sanity check"}}, "/auth/login": {"post": {"requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/user"}}}, "required": true, "description": "User to log in"}, "responses": {"200": {"description": "Successfully logged in"}, "404": {"description": "User does not exist"}, "500": {"description": "Error"}, "400": {"description": "Invalid payload"}}, "summary": "Logs a user in"}}, "/auth/status": {"get": {"security": [{"bearerAuth": []}], "responses": {"200": {"description": "user object"}, "403": {"description": "Provide a valid auth token"}}, "summary": "Returns the logged in user's status"}}, "/users/{id}": {"get": {"responses": {"200": {"description": "user object"}, "404": {"description": "User does not exist"}}, "parameters": [{"schema": {"type": "integer", "format": "int64"}, "description": "ID of user to fetch", "required": true, "name": "id", "in": "path"}], "summary": "Returns a user based on a single user ID"}}, "/users": {"post": {"requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/user-full"}}}, "required": true, "description": "User to add"}, "security": [{"bearerAuth": []}], "responses": {"201": {"description": "success"}, "200": {"description": "User added"}, "401": {"description": "You do not have permission to do that."}, "400": {"description": "Invalid payload, or email already exists"}}, "summary": "Adds a new user"}, "get": {"responses": {"200": {"description": "user object"}}, "summary": "Returns all users"}}}, "servers": [{"url": "http://testdriven-production-alb-679108917.us-east-1.elb.amazonaws.com"}], "components": {"securitySchemes": {"bearerAuth": {"scheme": "bearer", "type": "http"}}, "schemas": {"user-full": {"properties": {"username": {"type": "string"}, "password": {"type": "string"}, "email": {"type": "string"}}}, "user": {"properties": {"password": {"type": "string"}, "email": {"type": "string"}}}}}, "openapi": "3.0.2"}